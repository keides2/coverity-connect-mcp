# .github/workflows/security.yml
name: Security Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Python 3.10以上に変更
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] safety
        
        # 必要最小限の依存関係のみインストール
        pip install aiohttp aiofiles click
        
        # banditテスト用の基本的な依存関係
        pip install typing-extensions
    
    - name: Run Bandit security scan
      run: |
        # セキュリティスキャン実行（継続実行のため）
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ --severity-level medium
      continue-on-error: false
    
    - name: Run Safety check
      run: |
        # 依存関係の脆弱性チェック
        safety check --json --output safety-report.json || true
        safety check
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  test:
    runs-on: ubuntu-latest
    
    env:
      # テスト環境であることを明示
      TESTING: true
      COVAUTHUSER: test_user
      COVAUTHKEY: test_key
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Python 3.10以上に変更
    
    - name: Install basic dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install aiohttp aiofiles click typing-extensions
    
    - name: Run basic tests (without full project installation)
      run: |
        # プロジェクトの依存関係問題を回避してテスト実行
        export PYTHONPATH="${PYTHONPATH}:$(pwd)/src"
        python -c "import sys; print('Python version:', sys.version)"
        python -c "import os; print('TESTING:', os.getenv('TESTING'))"
        
        # 基本的なインポートテスト
        python -c "from src.coverity_mcp_server import coverity_client"
        echo "Basic import test passed"